# Generated by Django 4.1.3 on 2022-11-14 12:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('nutrition', '0003_allfood'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserSDA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('calories', models.FloatField(null=True)),
                ('water', models.FloatField(null=True)),
                ('carbohydrate', models.FloatField(null=True)),
                ('total_fiber', models.FloatField(null=True)),
                ('protein', models.FloatField(null=True)),
                ('fat', models.FloatField(null=True)),
                ('sat_fat', models.FloatField(null=True)),
                ('trans_fat', models.FloatField(null=True)),
                ('dietary_cholesterol', models.FloatField(null=True)),
                ('sugar', models.FloatField(null=True)),
                ('vitamin_a', models.FloatField(null=True)),
                ('vitamin_b_6', models.FloatField(null=True)),
                ('vitamin_b_12', models.FloatField(null=True)),
                ('vitamin_c', models.FloatField(null=True)),
                ('vitamin_d', models.FloatField(null=True)),
                ('vitamin_e', models.FloatField(null=True)),
                ('vitamin_k', models.FloatField(null=True)),
                ('thiamin', models.FloatField(null=True)),
                ('riboflavin', models.FloatField(null=True)),
                ('folate', models.FloatField(null=True)),
                ('niacin', models.FloatField(null=True)),
                ('choline', models.FloatField(null=True)),
                ('pantothenic_acid', models.FloatField(null=True)),
                ('carotenoids', models.FloatField(null=True)),
                ('calcium', models.FloatField(null=True)),
                ('copper', models.FloatField(null=True)),
                ('iron', models.FloatField(null=True)),
                ('magnesium', models.FloatField(null=True)),
                ('manganese', models.FloatField(null=True)),
                ('phosphorus', models.FloatField(null=True)),
                ('potassium', models.FloatField(null=True)),
                ('selenium', models.FloatField(null=True)),
                ('sodium', models.FloatField(null=True)),
                ('zinc', models.FloatField(null=True)),
                ('histidine', models.FloatField(null=True)),
                ('isoleucine', models.FloatField(null=True)),
                ('leucine', models.FloatField(null=True)),
                ('lysine', models.FloatField(null=True)),
                ('methionine', models.FloatField(null=True)),
                ('cysteine', models.FloatField(null=True)),
                ('phenylalanine', models.FloatField(null=True)),
                ('tyrosine', models.FloatField(null=True)),
                ('threonine', models.FloatField(null=True)),
                ('tryptophan', models.FloatField(null=True)),
                ('valine', models.FloatField(null=True)),
                ('created_by', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_sda', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserRDA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('calories', models.FloatField(null=True)),
                ('water', models.FloatField(null=True)),
                ('carbohydrate', models.FloatField(null=True)),
                ('total_fiber', models.FloatField(null=True)),
                ('protein', models.FloatField(null=True)),
                ('fat', models.FloatField(null=True)),
                ('sat_fat', models.FloatField(null=True)),
                ('trans_fat', models.FloatField(null=True)),
                ('dietary_cholesterol', models.FloatField(null=True)),
                ('sugar', models.FloatField(null=True)),
                ('vitamin_a', models.FloatField(null=True)),
                ('vitamin_b_6', models.FloatField(null=True)),
                ('vitamin_b_12', models.FloatField(null=True)),
                ('vitamin_c', models.FloatField(null=True)),
                ('vitamin_d', models.FloatField(null=True)),
                ('vitamin_e', models.FloatField(null=True)),
                ('vitamin_k', models.FloatField(null=True)),
                ('thiamin', models.FloatField(null=True)),
                ('riboflavin', models.FloatField(null=True)),
                ('folate', models.FloatField(null=True)),
                ('niacin', models.FloatField(null=True)),
                ('choline', models.FloatField(null=True)),
                ('pantothenic_acid', models.FloatField(null=True)),
                ('carotenoids', models.FloatField(null=True)),
                ('calcium', models.FloatField(null=True)),
                ('copper', models.FloatField(null=True)),
                ('iron', models.FloatField(null=True)),
                ('magnesium', models.FloatField(null=True)),
                ('manganese', models.FloatField(null=True)),
                ('phosphorus', models.FloatField(null=True)),
                ('potassium', models.FloatField(null=True)),
                ('selenium', models.FloatField(null=True)),
                ('sodium', models.FloatField(null=True)),
                ('zinc', models.FloatField(null=True)),
                ('histidine', models.FloatField(null=True)),
                ('isoleucine', models.FloatField(null=True)),
                ('leucine', models.FloatField(null=True)),
                ('lysine', models.FloatField(null=True)),
                ('methionine', models.FloatField(null=True)),
                ('cysteine', models.FloatField(null=True)),
                ('phenylalanine', models.FloatField(null=True)),
                ('tyrosine', models.FloatField(null=True)),
                ('threonine', models.FloatField(null=True)),
                ('tryptophan', models.FloatField(null=True)),
                ('valine', models.FloatField(null=True)),
                ('created_by', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_rda', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('calories', models.FloatField(null=True)),
                ('water', models.FloatField(null=True)),
                ('carbohydrate', models.FloatField(null=True)),
                ('total_fiber', models.FloatField(null=True)),
                ('protein', models.FloatField(null=True)),
                ('fat', models.FloatField(null=True)),
                ('sat_fat', models.FloatField(null=True)),
                ('trans_fat', models.FloatField(null=True)),
                ('dietary_cholesterol', models.FloatField(null=True)),
                ('sugar', models.FloatField(null=True)),
                ('vitamin_a', models.FloatField(null=True)),
                ('vitamin_b_6', models.FloatField(null=True)),
                ('vitamin_b_12', models.FloatField(null=True)),
                ('vitamin_c', models.FloatField(null=True)),
                ('vitamin_d', models.FloatField(null=True)),
                ('vitamin_e', models.FloatField(null=True)),
                ('vitamin_k', models.FloatField(null=True)),
                ('thiamin', models.FloatField(null=True)),
                ('riboflavin', models.FloatField(null=True)),
                ('folate', models.FloatField(null=True)),
                ('niacin', models.FloatField(null=True)),
                ('choline', models.FloatField(null=True)),
                ('pantothenic_acid', models.FloatField(null=True)),
                ('carotenoids', models.FloatField(null=True)),
                ('calcium', models.FloatField(null=True)),
                ('copper', models.FloatField(null=True)),
                ('iron', models.FloatField(null=True)),
                ('magnesium', models.FloatField(null=True)),
                ('manganese', models.FloatField(null=True)),
                ('phosphorus', models.FloatField(null=True)),
                ('potassium', models.FloatField(null=True)),
                ('selenium', models.FloatField(null=True)),
                ('sodium', models.FloatField(null=True)),
                ('zinc', models.FloatField(null=True)),
                ('histidine', models.FloatField(null=True)),
                ('isoleucine', models.FloatField(null=True)),
                ('leucine', models.FloatField(null=True)),
                ('lysine', models.FloatField(null=True)),
                ('methionine', models.FloatField(null=True)),
                ('cysteine', models.FloatField(null=True)),
                ('phenylalanine', models.FloatField(null=True)),
                ('tyrosine', models.FloatField(null=True)),
                ('threonine', models.FloatField(null=True)),
                ('tryptophan', models.FloatField(null=True)),
                ('valine', models.FloatField(null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_logs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
